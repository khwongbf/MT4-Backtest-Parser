package com.metatradetools.backtest.models.summary;

import com.metatradetools.backtest.models.summary.chart.Modelling;
import com.metatradetools.backtest.models.summary.initial.Environment;
import com.metatradetools.backtest.models.summary.initial.Inputs;
import com.metatradetools.backtest.models.summary.result.Result;

import java.beans.JavaBean;

/**
 *  Represents the summary of a strategy tester report.
 * <p>
 *     This class stores the summary of a strategy tester report, which is a {@link com.metatradetools.backtest.models.Backtest Backtest} object.
 * </p>
 * @author Wong Kwan Ho
 * @version 1.0
 * @see com.metatradetools.backtest.models.Backtest
 */
@JavaBean
public class BacktestSummary {
	/**
	 *  A field that represents the integrity of data used in the strategy test.
	 * @see Modelling
	 */
	private final Modelling modelling = new Modelling();
	
	/**
	 *  A field that represents the Metatrader 4 platform environment, and the expert advisor used in the strategy tester
	 * @see Environment
	 */
	private final Environment environment = new Environment();
	
	/**
	 * A field that represents the variables that the user inputted for the strategy test.
	 * @see Inputs
	 */
	private final Inputs inputs = new Inputs();
	
	/**
	 *  A field that represents the results of the strategy test, which is generated by the tester.
	 * @see Result
	 */
	private final Result result = new Result();
	
	/**
	 *  Returns the instance that represents data integrity of the strategy test.
	 * @return the {@link Modelling} instance that represents the quality of the data used in the strategy test
	 * @see Modelling
	 */
	public Modelling getModelling () {
		return modelling;
	}
	
	/**
	 *  Returns the instance that represents the environment used in the strategy test, including the broker server and the expert advisor.
	 * @return the {@link Environment} instance that represents the environment used in the strategy test
	 * @see Environment
	 */
	public Environment getEnvironment () {
		return environment;
	}
	
	/**
	 *  Returns the instance that represents the variables that the user inputs in the strategy tester
	 * @return the {@link Inputs} instance that represents the inputted variables in the strategy test
	 * @see Inputs
	 */
	public Inputs getInputs () {
		return inputs;
	}
	
	/**
	 * Returns the instance that represents the results of the strategy test, as generated by the tester
	 * @return the {@link Result} instance that represents the results of the strategy test
	 * @see Result
	 */
	public Result getResult () {
		return result;
	}
}
